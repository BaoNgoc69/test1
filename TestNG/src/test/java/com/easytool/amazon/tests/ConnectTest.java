package com.easytool.amazon.tests;

import com.easytool.amazon.pages.BaseTestPage;
import com.easytool.amazon.pages.ConnectPage;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import org.openqa.selenium.WebElement;
import java.util.List;

import java.time.Duration;

public class ConnectTest extends BaseTest {
    ConnectPage connectPage;

    @BeforeClass
    public void initPages() {
        BaseTestPage baseTest = new BaseTestPage(driver);
        connectPage = new ConnectPage(driver, baseTest);
    }



    @Test(dependsOnMethods = {"testLogin"})
    public void testOpenConnectTab() {
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(20));

        try {
            // Ch·ªù iframe xu·∫•t hi·ªán √≠t nh·∫•t m·ªôt c√°i
            wait.until(ExpectedConditions.presenceOfElementLocated(By.tagName("iframe")));
            System.out.println("‚úÖ √çt nh·∫•t m·ªôt iframe ƒë√£ xu·∫•t hi·ªán.");

            // Debug: In ra s·ªë l∆∞·ª£ng iframe tr√™n trang
            List<WebElement> iframes = driver.findElements(By.tagName("iframe"));
            System.out.println("üîç T·ªïng s·ªë iframes tr√™n trang: " + iframes.size());

            if (iframes.isEmpty()) {
                System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y iframe n√†o!");
                return;  // D·ª´ng test case n·∫øu kh√¥ng c√≥ iframe
            }

            for (WebElement iframe : iframes) {
                String title = iframe.getAttribute("title");
                System.out.println("üìå Iframe title: " + (title != null ? title : "Kh√¥ng c√≥ title"));

                // Ki·ªÉm tra iframe c√≥ hi·ªÉn th·ªã kh√¥ng
                if (iframe.isDisplayed()) {
                    System.out.println("‚úÖ Iframe n√†y ƒëang hi·ªÉn th·ªã.");
                } else {
                    System.out.println("‚ö†Ô∏è Iframe n√†y c√≥ th·ªÉ b·ªã ·∫©n.");
                }
            }

            // T√¨m ƒë√∫ng iframe theo title (n·∫øu c√≥)
            WebElement targetIframe = wait.until(ExpectedConditions.presenceOfElementLocated(
                    By.xpath("//iframe[contains(@title, '[DEV] Amazon Easy Tool')]")
            ));

            ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", targetIframe);

            // Chuy·ªÉn v√†o iframe n·∫øu n√≥ hi·ªÉn th·ªã
            if (targetIframe.isDisplayed()) {
                driver.switchTo().frame(targetIframe);
                System.out.println("‚úÖ ƒê√£ chuy·ªÉn v√†o iframe.");
            } else {
                System.out.println("‚ùå Iframe b·ªã ·∫©n, kh√¥ng th·ªÉ switch.");
                return;
            }

            // Ch·ªù tab Connect hi·ªÉn th·ªã
            WebElement connectTab = wait.until(ExpectedConditions.visibilityOfElementLocated(
                    By.xpath("//ul[@class='tabs-container']//span[normalize-space()='Connect']")
            ));
            wait.until(ExpectedConditions.elementToBeClickable(connectTab)).click();
            System.out.println("‚úÖ ƒê√£ m·ªü tab Connect.");

            // G·ªçi h√†m checkAllConnections()
            System.out.println("üîç ƒêang ch·∫°y checkAllConnections()");
            connectPage.checkAllConnections();
        } catch (Exception e) {
            System.out.println("‚ùå L·ªói khi m·ªü tab Connect: " + e.getMessage());
            throw e;
        }
    }


}
